{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["checkPasswordhandler","e","Home","id","go","fetchedUser","placeholder","align","onChange","console","log","title","size","level","onClick","data-to","App","useState","activePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","ReactDOM","render","getElementById"],"mappings":"4pBAmCMA,EAAuB,SAACC,KAiBfC,EAxCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,EAAOC,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,kHAEA,kBAAC,IAAD,CAAOG,YAAa,8FAAoBC,MAAO,SAAUC,SAP/C,KAQV,6BACA,kBAAC,IAAD,CAAOF,YAAa,uCAAUC,MAAO,SAAUC,SAAU,kBAAMC,QAAQC,SACtED,QAAQC,IAVC,GACG,IAUb,kBAAC,IAAD,CAAOC,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCC,KAAK,KACLC,MAAM,IACNC,QAASd,EACTe,UAAQ,UAJT,aCcWC,EA5BH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,aAEcD,mBAAS,OAFvB,mBAEGE,GAFH,aAGWF,mBAAS,kBAAC,IAAD,CAAeL,KAAK,WAHxC,mBAGVQ,EAHU,KAGFC,EAHE,KAqBjB,OAhBAC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAGF,kBAAC,IAAD,CAAMrB,YAAaA,EAAaE,OAAQA,GACvC,kBAAC,EAAD,CAAMjB,GAAG,WCtBZqB,IAAOC,KAAK,gBAQZe,IAASC,OAAO,kBAAC,EAAD,MAAST,SAASU,eAAe,W","file":"static/js/main.f51d6f4c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\n\nlet login = \"\";\nlet password = \"\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Вход в сетевой город</PanelHeader>\n\n\t\t<Input placeholder={\"Имя пользователя\"} align={\"center\"} onChange={login} />\n\t\t<br/>\n\t\t<Input placeholder={\"Пароль\"} align={\"center\"} onChange={() => console.log()}/>\n\t\t{console.log(login, password)}\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"xl\"\n\t\t\t\t\tlevel=\"2\"\n\t\t\t\t\tonClick={checkPasswordhandler}\n\t\t\t\t\tdata-to=\"persik\"\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nconst checkPasswordhandler = (e) => {\n\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}